<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.

$this->factories['admin.category'] = function () {
    // Returns the public 'admin.category' autowired service.

    $instance = new \App\Admin\CategoryAdmin('admin.category', 'App\\Entity\\Category', 'SonataAdminBundle:CRUD');

    $instance->setManagerType('orm');
    $instance->setModelManager(($this->services['sonata.admin.manager.orm'] ?? $this->load('getSonata_Admin_Manager_OrmService.php')));
    $instance->setFormContractor(($this->privates['sonata.admin.builder.orm_form'] ?? $this->load('getSonata_Admin_Builder_OrmFormService.php')));
    $instance->setShowBuilder(($this->privates['sonata.admin.builder.orm_show'] ?? $this->load('getSonata_Admin_Builder_OrmShowService.php')));
    $instance->setListBuilder(($this->privates['sonata.admin.builder.orm_list'] ?? $this->load('getSonata_Admin_Builder_OrmListService.php')));
    $instance->setDatagridBuilder(($this->privates['sonata.admin.builder.orm_datagrid'] ?? $this->load('getSonata_Admin_Builder_OrmDatagridService.php')));
    $instance->setTranslator(($this->services['translator'] ?? $this->getTranslatorService()), false);
    $instance->setConfigurationPool(($this->services['sonata.admin.pool'] ?? $this->getSonata_Admin_PoolService()));
    $instance->setRouteGenerator(($this->services['sonata.admin.route.default_generator'] ?? $this->load('getSonata_Admin_Route_DefaultGeneratorService.php')));
    $instance->setValidator(($this->services['validator'] ?? $this->getValidatorService()));
    $instance->setSecurityHandler(($this->privates['sonata.admin.security.handler.noop'] ?? $this->privates['sonata.admin.security.handler.noop'] = new \Sonata\AdminBundle\Security\Handler\NoopSecurityHandler()));
    $instance->setMenuFactory(($this->services['knp_menu.factory'] ?? $this->load('getKnpMenu_FactoryService.php')));
    $instance->setRouteBuilder(($this->services['sonata.admin.route.path_info'] ?? $this->load('getSonata_Admin_Route_PathInfoService.php')));
    $instance->setLabelTranslatorStrategy(($this->services['sonata.admin.label.strategy.native'] ?? $this->services['sonata.admin.label.strategy.native'] = new \Sonata\AdminBundle\Translator\NativeLabelTranslatorStrategy()));
    $instance->setPagerType('default');
    $instance->setLabel('Category');
    $instance->showMosaicButton(true);
    $instance->setTemplateRegistry(($this->services['admin.category.template_registry'] ?? $this->load('getAdmin_Category_TemplateRegistryService.php')));
    $instance->setSecurityInformation(array());
    $instance->initialize();
    $instance->addExtension(($this->services['sonata.admin.event.extension'] ?? $this->load('getSonata_Admin_Event_ExtensionService.php')));
    $instance->setFormTheme(array(0 => '@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig'));
    $instance->setFilterTheme(array(0 => '@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig'));

    return $instance;
};

return $this->factories['admin.category']();
